"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkTheme_One"] = self["webpackChunkTheme_One"] || []).push([["node_modules_salla_sa_twilight-components_dist_esm_salla-add-product-button_entry_js"],{

/***/ "./node_modules/@salla.sa/twilight-components/dist/esm/salla-add-product-button.entry.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@salla.sa/twilight-components/dist/esm/salla-add-product-button.entry.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"salla_add_product_button\": () => (/* binding */ SallaAddProductButton)\n/* harmony export */ });\n/* harmony import */ var _index_20b84fd0_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-20b84fd0.js */ \"./node_modules/@salla.sa/twilight-components/dist/esm/index-20b84fd0.js\");\n/*!\n * Crafted with ‚ù§ by Salla\n */\n\n\nconst sallaAddProductButtonCss = \":host{display:block}salla-add-product-button[width=wide]{width:100%}\";\n\nconst SallaAddProductButton = class {\n  constructor(hostRef) {\n    (0,_index_20b84fd0_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);\n    this.success = (0,_index_20b84fd0_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"success\", 7);\n    this.failed = (0,_index_20b84fd0_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"failed\", 7);\n    this.hostAttributes = {};\n    this.hasLabel = false;\n    this.channels = null;\n    this.quantity = 0;\n    this.donatingAmount = 0;\n    this.productStatus = 'sale';\n    this.productType = 'product';\n  }\n  getLabel() {\n    if (this.productStatus === 'sale') {\n      return salla.lang.get('pages.cart.add_to_cart');\n    }\n    if (this.productType !== 'donating') {\n      return salla.lang.get('pages.products.out_of_stock');\n    }\n    // donating\n    return salla.lang.get('pages.products.donation_exceed');\n  }\n  addProductToCart(event) {\n    // we want to ignore the click action when the type of button is submit a form\n    if (this.hostAttributes['type'] === 'submit') {\n      return false;\n    }\n    event.preventDefault();\n    /**\n     * by default the quick add is just an alias for add item function\n     * but its work only when the id is the only value is passed via the object\n     * so we will filter the object entities to remove null and zero values in case we don't want the normal add item action\n     */\n    const data = Object.entries({\n      id: this.productId,\n      donating_amount: this.donatingAmount,\n      quantity: this.quantity\n    }).reduce((a, [k, v]) => (v ? (a[k] = v, a) : a), {});\n    return salla.cart.quickAdd(data)\n      .then((response) => {\n      console.log(\"üöÄ ~ file: salla-add-product-button.tsx ~ line 67 ~ SallaAddProductButton ~ .then ~ response\", response);\n      return this.success.emit(response);\n    })\n      .catch((error) => {\n      console.log(\"üöÄ ~ file: salla-add-product-button.tsx ~ line 70 ~ SallaAddProductButton ~ addProductToCart ~ error\", error);\n      return this.failed.emit(error);\n    });\n  }\n  getBtnAttributes() {\n    for (let i = 0; i < this.host.attributes.length; i++) {\n      if (!['id', 'class'].includes(this.host.attributes[i].name)) {\n        this.hostAttributes[this.host.attributes[i].name] = this.host.attributes[i].value;\n      }\n    }\n    return this.hostAttributes;\n  }\n  componentWillLoad() {\n    this.hasLabel = !!this.host.innerHTML.replace('<!---->', '').trim();\n  }\n  render() {\n    return ((0,_index_20b84fd0_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_20b84fd0_js__WEBPACK_IMPORTED_MODULE_0__.H, null, this.productStatus === 'out-and-notify' && this.channels ?\n      (0,_index_20b84fd0_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"salla-product-availability\", Object.assign({}, this.getBtnAttributes()), (0,_index_20b84fd0_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"slot\", null)) :\n      (0,_index_20b84fd0_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"salla-button\", Object.assign({ ref: el => this.btn = el, onClick: event => this.addProductToCart(event), type: \"button\", fill: this.productStatus === 'sale' ? 'solid' : 'outline', color: this.productStatus === 'sale' ? 'primary' : 'light', \"loader-position\": \"center\" }, this.getBtnAttributes(), { disabled: this.productStatus !== 'sale' }), (0,_index_20b84fd0_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"slot\", null))));\n  }\n  componentDidRender() {\n    //if label not passed, get label\n    this.hasLabel || salla.event.on('languages::translations.loaded', () => this.btn.setText(this.getLabel() || 'ÿßÿ∂ÿßŸÅÿ© ŸÑŸÑÿ≥ŸÑÿ©'));\n  }\n  get host() { return (0,_index_20b84fd0_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }\n};\nSallaAddProductButton.style = sallaAddProductButtonCss;\n\n\n\n\n//# sourceURL=webpack://Theme-One/./node_modules/@salla.sa/twilight-components/dist/esm/salla-add-product-button.entry.js?");

/***/ })

}]);